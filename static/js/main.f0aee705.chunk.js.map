{"version":3,"sources":["config.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","apps","length","app","initializeApp","pricesRef","firestore","collection","orderBy","limit","App","useState","data","setData","updateData","useCallback","get","then","snapshot","prices","docs","map","doc","id","reverse","labels","price","Date","date","seconds","toLocaleString","timeZone","uni_swap","erc_20","erc20_transfer","uni_liq","useEffect","chart","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","pointHitRadius","className","href","rel","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAUiBA,EAVM,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gB,OCAdC,IAASC,KAAKC,OAGjBF,IAASG,MAFTH,IAASI,cAAcZ,GAKzB,IAAMa,EAAYL,IAASM,YAAYC,WAAW,eAAeC,QAAQ,OAAQ,QAAQC,MAAM,IAwFhFC,MAtFf,WAAgB,IAAD,EACWC,mBAAS,MADpB,mBACNC,EADM,KACAC,EADA,KAGPC,EAAaC,uBAAY,WAC7BV,EACCW,MACAC,MAAK,SAACC,GACL,IAIMC,EAJaD,EAASE,KAAKC,KAAI,SAACC,GAAD,oBACnCC,GAAID,EAAIC,IACLD,EAAIV,WAEiBY,UACpBC,EAASN,EAAOE,KAAI,SAAAK,GAAK,OAAK,IAAIC,KAA0B,IAArBD,EAAME,KAAKC,SAAgBC,eAAe,QAAS,CAAEC,SAAU,WACtGC,EAAWb,EAAOE,KAAI,SAAAK,GAAK,OAAKA,EAAMM,YACtCC,EAASd,EAAOE,KAAI,SAAAK,GAAK,OAAKA,EAAMQ,kBACpCC,EAAUhB,EAAOE,KAAI,SAAAK,GAAK,OAAKA,EAAMS,WAC3CtB,EAAQ,CACNY,SACAO,WACAC,SACAE,iBAGA,IAENC,qBAAU,WACNtB,MACF,CAACA,IAEH,IAAMuB,EAAQ,CACZZ,OAAQb,EAAOA,EAAKa,OAAS,GAC7Ba,SAAU,CACR,CACEC,MAAO,WACPC,gBAAiB,uBACjBC,YAAa,qBACbC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBnC,KAAMA,EAAOA,EAAKoB,SAAW,IAE/B,CACEO,MAAO,SACPC,gBAAiB,uBACjBC,YAAa,qBACbC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBnC,KAAMA,EAAOA,EAAKqB,OAAS,IAE7B,CACEM,MAAO,UACPC,gBAAiB,uBACjBC,YAAa,sBACbC,qBAAsB,OACtBC,iBAAkB,EAClBC,iBAAkB,EAClBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBnC,KAAMA,EAAOA,EAAKuB,QAAU,MAKlC,OACE,sBAAKa,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,6CACA,qBAAKA,UAAW,QAAhB,SACE,cAAC,OAAD,CAAMpC,KAAMyB,SAGhB,iCACE,mBAAGY,KAAK,4BAA4BC,IAAI,aAAaC,OAAO,SAA5D,gDCnFOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f0aee705.chunk.js","sourcesContent":["const firebaseConfig = {\r\n    apiKey: \"AIzaSyCYa490KJ_GJqsykw4668Z-CiZ2wfJ1tZ4\",\r\n    authDomain: \"gwei-price-watcher.firebaseapp.com\",\r\n    projectId: \"gwei-price-watcher\",\r\n    storageBucket: \"gwei-price-watcher.appspot.com\",\r\n    messagingSenderId: \"859407948329\",\r\n    appId: \"1:859407948329:web:8fa4d1f6db64e32a7c5a38\",\r\n    measurementId: \"G-RKYDJQ62M6\"\r\n  };\r\n\r\n  export default firebaseConfig;","import './App.css';\nimport {useState, useEffect, useCallback} from 'react';\n\nimport {Line} from 'react-chartjs-2';\nimport firebase from 'firebase';\nimport firebaseConfig from './config';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n} else {\n  firebase.app();\n}\n\nconst pricesRef = firebase.firestore().collection('gwei_prices').orderBy('date', 'desc').limit(30);\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  const updateData = useCallback(() => {\n    pricesRef\n    .get()\n    .then((snapshot) => {\n      const all_prices = snapshot.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      const prices = all_prices.reverse();\n      const labels = prices.map(price => (new Date(price.date.seconds * 1000).toLocaleString('en-GB', { timeZone: 'UTC' })));\n      const uni_swap = prices.map(price => (price.uni_swap));\n      const erc_20 = prices.map(price => (price.erc20_transfer));\n      const uni_liq = prices.map(price => (price.uni_liq));\n      setData({\n        labels,\n        uni_swap,\n        erc_20,\n        uni_liq\n      });\n    }\n    )}, []);\n\n  useEffect(() => {\n      updateData();\n  },[updateData]);\n\n  const chart = {\n    labels: data ? data.labels : [],\n    datasets: [\n      {\n        label: 'UNI SWAP',\n        backgroundColor: 'rgb(20 144 41 / 0.3)',\n        borderColor: 'rgb(20 144 41 / 1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 2,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth: 2,\n        pointRadius: 4,\n        pointHitRadius: 10,\n        data: data ? data.uni_swap : []\n      },\n      {\n        label: 'ERC 20',\n        backgroundColor: 'rgb(27 63 136 / 0.3)',\n        borderColor: 'rgb(27 63 136 / 1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 2,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth: 2,\n        pointRadius: 4,\n        pointHitRadius: 10,\n        data: data ? data.erc_20 : []\n      },\n      {\n        label: 'UNI LIQ',\n        backgroundColor: 'rgb(142 20 144 / .3)',\n        borderColor: 'rgb(142 20 144 / 1)',\n        pointBackgroundColor: '#fff',\n        pointBorderWidth: 2,\n        pointHoverRadius: 5,\n        pointHoverBorderWidth: 2,\n        pointRadius: 4,\n        pointHitRadius: 10,\n        data: data ? data.uni_liq : []\n      },\n    ]\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Gwei Prices</h2>\n        <div className={'chart'}>\n          <Line data={chart}/>\n        </div>\n      </header>\n      <footer>\n        <a href='https://etherscan.io/apis' rel=\"noreferrer\" target='_blank'>Powered by Etherscan.io APIs</a>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}